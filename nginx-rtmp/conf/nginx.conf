
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
           # 允许所有来源的跨域请求
            add_header Access-Control-Allow-Origin *;
            # 允许指定的请求头
            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            # 允许指定的请求方法
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";

            # 如果还需要在跨域请求中使用身份验证信息（如 cookie），请添加以下配置
            # add_header Access-Control-Allow-Credentials "true";

            # 如果需要将其他自定义请求头暴露给客户端，可以使用以下配置
            # add_header Access-Control-Expose-Headers "Custom-Header";

            root   /var/www/html;
            index  index.html index.htm;
        }

        location /hls {
           types {
            application/vnd.apple.mpegurl m3u8;
            video/mp2ts ts;
           }
           root /var/www/html/;
           add_header Cache-Control no-cache;
           add_header Access-Control-Allow-Origin *;
        }
        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /var/www/html;
        }

    }
}

rtmp {
    server {
        listen 1935;        # RTMP 服务监听的端口

        chunk_size 4096;    # 设置 chunk 大小

        application live {  # 定义应用名称为 live
            live on;         # 启用直播功能
            hls on;          # 启用 HLS 功能

            hls_path /var/www/html/hls;  # 设置 HLS 切片存放位置，即直播和点播的切片会保存在 /var/www/html/hls 目录下

            hls_fragment 6;             # 设置每个切片的时长，这里设置为 6 秒
            hls_playlist_length 30;     # 设置 HLS 播放列表的时长，这里设置为 30 秒

            hls_continuous on;          # 启用连续模式，新的直播切片会追加到已有的切片中，以降低延时
            hls_cleanup on;             # 启用清理模式，会定期删除过期的切片，避免过多切片占用磁盘空间
            hls_nested on;              # 启用嵌套目录模式，将切片和播放列表存放在不同的子目录下，有助于提高性能
        }
    }
}
